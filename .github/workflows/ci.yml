name: Tests ðŸŽ³

on:
  push:
    tags:
      - "*"
    branches:
      - main
    paths:
      - 'mesh_tools/**'
      - '.docker/**'
      - '.github/ci.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'mesh_tools/**'
      - '.docker/**'
      - '.github/ci.yml'

jobs:

  ruff:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
          architecture: x64

      - name: Checkout
        uses: actions/checkout@main

      - uses: actions/cache@v4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python requirements
        run: pip install -r requirements/dev.txt

      - name: Run ruff linter
        run: ruff check

      - name: Run ruff formatter
        run: ruff format --check

  tests-unit:
    runs-on: ubuntu-latest

    steps:
      - name: Get source code
        uses: actions/checkout@v5

      - name: Setup Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
          architecture: x64

      - uses: actions/cache@v4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python requirements
        run: pip install -r requirements/testing.txt

      - name: Run Unit tests
        run: pytest tests/unit/

  release:
    needs: [ruff, tests-unit]

    runs-on: ubuntu-latest
    if: github.repository_owner == 'Artelia' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v5

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install Qt lrelease
        run: |
          sudo apt-get update
          sudo apt-get install qtbase5-dev qt5-qmake qttools5-dev-tools

      - uses: actions/cache@v4.2.4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements/packaging.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python requirements
        run: pip install -r requirements/packaging.txt

      - name : Fetch current changelog
        run: qgis-plugin-ci changelog ${{ env.RELEASE_VERSION }} >> release.md

      - name: Package and deploy the zip
        run: >-
          qgis-plugin-ci
          release ${{ env.RELEASE_VERSION }}
          --github-token ${{ secrets.GITHUB_TOKEN }}
          --allow-uncommitted-changes
          --osgeo-username ${{ secrets.OSGEO_USERNAME }}
          --osgeo-password ${{ secrets.OSGEO_PASSWORD }}
